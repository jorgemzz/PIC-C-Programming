D G "__PCH__" 0 0 ""4.057""
D G "__DEVICE__" 0 0 ""
D G "__DATE__" 0 0 ""28-may-14""
D G "__TIME__" 0 0 ""17:48:50"" "Standard Header file for the PIC18F2550 device ////////////////"
d G "PIN_A0" 1 27 "31744"
d G "PIN_A1" 1 28 "31745"
d G "PIN_A2" 1 29 "31746"
d G "PIN_A3" 1 30 "31747"
d G "PIN_A4" 1 31 "31748"
d G "PIN_A5" 1 32 "31749"
d G "PIN_A6" 1 33 "31750"
d G "PIN_B0" 1 35 "31752"
d G "PIN_B1" 1 36 "31753"
d G "PIN_B2" 1 37 "31754"
d G "PIN_B3" 1 38 "31755"
d G "PIN_B4" 1 39 "31756"
d G "PIN_B5" 1 40 "31757"
d G "PIN_B6" 1 41 "31758"
d G "PIN_B7" 1 42 "31759"
d G "PIN_C0" 1 44 "31760"
d G "PIN_C1" 1 45 "31761"
d G "PIN_C2" 1 46 "31762"
d G "PIN_C3" 1 47 "31763"
d G "PIN_C4" 1 48 "31764"
d G "PIN_C5" 1 49 "31765"
d G "PIN_C6" 1 50 "31766"
d G "PIN_C7" 1 51 "31767"
d G "PIN_E3" 1 53 "31779"
d G "FALSE" 1 56 "0"
d G "TRUE" 1 57 "1"
d G "BYTE" 1 59 "int8"
d G "BOOLEAN" 1 60 "int1"
d G "getc" 1 62 "getch"
d G "fgetc" 1 63 "getch"
d G "getchar" 1 64 "getch"
d G "putc" 1 65 "putchar"
d G "fputc" 1 66 "putchar"
d G "fgets" 1 67 "gets"
d G "fputs" 1 68 "puts"
d G "WDT_TIMEOUT" 1 74 "7"
d G "MCLR_FROM_SLEEP" 1 75 "11"
d G "MCLR_FROM_RUN" 1 76 "15"
d G "NORMAL_POWER_UP" 1 77 "12"
d G "BROWNOUT_RESTART" 1 78 "14"
d G "WDT_FROM_SLEEP" 1 79 "3"
d G "RESET_INSTRUCTION" 1 80 "0"
d G "RTCC_INTERNAL" 1 87 "0"
d G "RTCC_EXT_L_TO_H" 1 88 "32"
d G "RTCC_EXT_H_TO_L" 1 89 "48"
d G "RTCC_DIV_1" 1 91 "8"
d G "RTCC_DIV_2" 1 92 "0"
d G "RTCC_DIV_4" 1 93 "1"
d G "RTCC_DIV_8" 1 94 "2"
d G "RTCC_DIV_16" 1 95 "3"
d G "RTCC_DIV_32" 1 96 "4"
d G "RTCC_DIV_64" 1 97 "5"
d G "RTCC_DIV_128" 1 98 "6"
d G "RTCC_DIV_256" 1 99 "7"
d G "RTCC_OFF" 1 101 "0x80"
d G "RTCC_8_BIT" 1 103 "0x40"
d G "WDT_ON" 1 114 "0x100"
d G "WDT_OFF" 1 115 "0"
d G "T1_DISABLED" 1 121 "0"
d G "T1_INTERNAL" 1 122 "0x85"
d G "T1_EXTERNAL" 1 123 "0x87"
d G "T1_EXTERNAL_SYNC" 1 124 "0x83"
d G "T1_CLK_OUT" 1 126 "8"
d G "T1_DIV_BY_1" 1 128 "0"
d G "T1_DIV_BY_2" 1 129 "0x10"
d G "T1_DIV_BY_4" 1 130 "0x20"
d G "T1_DIV_BY_8" 1 131 "0x30"
d G "T2_DISABLED" 1 136 "0"
d G "T2_DIV_BY_1" 1 137 "4"
d G "T2_DIV_BY_4" 1 138 "5"
d G "T2_DIV_BY_16" 1 139 "6"
d G "T3_DISABLED" 1 145 "0"
d G "T3_INTERNAL" 1 146 "0x85"
d G "T3_EXTERNAL" 1 147 "0x87"
d G "T3_EXTERNAL_SYNC" 1 148 "0x83"
d G "T3_DIV_BY_1" 1 150 "0"
d G "T3_DIV_BY_2" 1 151 "0x10"
d G "T3_DIV_BY_4" 1 152 "0x20"
d G "T3_DIV_BY_8" 1 153 "0x30"
d G "CCP_OFF" 1 159 "0"
d G "CCP_CAPTURE_FE" 1 160 "4"
d G "CCP_CAPTURE_RE" 1 161 "5"
d G "CCP_CAPTURE_DIV_4" 1 162 "6"
d G "CCP_CAPTURE_DIV_16" 1 163 "7"
d G "CCP_COMPARE_SET_ON_MATCH" 1 164 "8"
d G "CCP_COMPARE_CLR_ON_MATCH" 1 165 "9"
d G "CCP_COMPARE_INT" 1 166 "0xA"
d G "CCP_COMPARE_INT_AND_TOGGLE" 1 167 "0x2"
d G "CCP_COMPARE_RESET_TIMER" 1 168 "0xB"
d G "CCP_PWM" 1 169 "0xC"
d G "CCP_PWM_PLUS_1" 1 170 "0x1c"
d G "CCP_PWM_PLUS_2" 1 171 "0x2c"
d G "CCP_PWM_PLUS_3" 1 172 "0x3c"
d G "CCP_USE_TIMER3" 1 173 "0x100"
v G "CCP_1" 1 174 "int16"
v G "CCP_2" 1 178 "int16"
d G "SPI_MASTER" 1 185 "0x20"
d G "SPI_SLAVE" 1 186 "0x24"
d G "SPI_L_TO_H" 1 187 "0"
d G "SPI_H_TO_L" 1 188 "0x10"
d G "SPI_CLK_DIV_4" 1 189 "0"
d G "SPI_CLK_DIV_16" 1 190 "1"
d G "SPI_CLK_DIV_64" 1 191 "2"
d G "SPI_CLK_T2" 1 192 "3"
d G "SPI_SS_DISABLED" 1 193 "1"
d G "SPI_SAMPLE_AT_END" 1 195 "0x8000"
d G "SPI_XMIT_L_TO_H" 1 196 "0x4000"
d G "UART_ADDRESS" 1 202 "2"
d G "UART_DATA" 1 203 "4"
d G "UART_AUTODETECT" 1 204 "8"
d G "UART_AUTODETECT_NOWAIT" 1 205 "9"
d G "UART_WAKEUP_ON_RDA" 1 206 "10"
d G "UART_SEND_BREAK" 1 207 "13"
d G "A0_A3_A1_A3" 1 211 "0xfff04"
d G "A0_A3_A1_A2_OUT_ON_A4_A5" 1 212 "0xfcf03"
d G "A0_A3_A1_A3_OUT_ON_A4_A5" 1 213 "0xbcf05"
d G "NC_NC_NC_NC" 1 214 "0x0ff07"
d G "A0_A3_A1_A2" 1 215 "0xfff02"
d G "A0_A3_NC_NC_OUT_ON_A4" 1 216 "0x9ef01"
d G "A0_VR_A1_VR" 1 217 "0x3ff06"
d G "A3_VR_A2_VR" 1 218 "0xcff0e"
d G "CP1_INVERT" 1 219 "0x0000010"
d G "CP2_INVERT" 1 220 "0x0000020"
d G "VREF_LOW" 1 228 "0xa0"
d G "VREF_HIGH" 1 229 "0x80"
d G "VREF_F5" 1 231 "0x40"
d G "VREF_COMP" 1 232 "0x10"
d G "LVD_LVDIN" 1 237 "0x1F"
d G "LVD_45" 1 238 "0x1E"
d G "LVD_42" 1 239 "0x1D"
d G "LVD_40" 1 240 "0x1C"
d G "LVD_38" 1 241 "0x1B"
d G "LVD_36" 1 242 "0x1A"
d G "LVD_35" 1 243 "0x19"
d G "LVD_33" 1 244 "0x18"
d G "LVD_30" 1 245 "0x17"
d G "LVD_28" 1 246 "0x16"
d G "LVD_27" 1 247 "0x15"
d G "LVD_25" 1 248 "0x14"
d G "LVD_24" 1 249 "0x13"
d G "LVD_23" 1 250 "0x12"
d G "LVD_22" 1 251 "0x11"
d G "LVD_21" 1 252 "0x10"
d G "LVD_TRIGGER_BELOW" 1 254 "0"
d G "LVD_TRIGGER_ABOVE" 1 255 "0x80"
d G "OSC_31KHZ" 1 261 "0"
d G "OSC_125KHZ" 1 262 "0x10"
d G "OSC_250KHZ" 1 263 "0x20"
d G "OSC_500KHZ" 1 264 "0x30"
d G "OSC_1MHZ" 1 265 "0x40"
d G "OSC_2MHZ" 1 266 "0x50"
d G "OSC_4MHZ" 1 267 "0x60"
d G "OSC_8MHZ" 1 268 "0x70"
d G "OSC_16MHZ" 1 269 "0x4060"
d G "OSC_32MHZ" 1 270 "0x4070"
d G "OSC_TIMER1" 1 272 "1"
d G "OSC_INTRC" 1 273 "2"
d G "OSC_NORMAL" 1 274 "0"
d G "OSC_IDLE_MODE" 1 276 "0x80"
d G "OSC_31250" 1 277 "0x8000"
d G "OSC_PLL_ON" 1 278 "0x4000"
d G "OSC_PLL_OFF" 1 279 "0"
d G "OSC_STATE_STABLE" 1 283 "4"
d G "OSC_STATE_EXT_RUNNING" 1 284 "8"
d G "ADC_OFF" 1 291 "0" "ADC Off"
d G "ADC_CLOCK_DIV_2" 1 292 "0x100"
d G "ADC_CLOCK_DIV_4" 1 293 "0x04"
d G "ADC_CLOCK_DIV_8" 1 294 "0x01"
d G "ADC_CLOCK_DIV_16" 1 295 "0x05"
d G "ADC_CLOCK_DIV_32" 1 296 "0x02"
d G "ADC_CLOCK_DIV_64" 1 297 "0x06"
d G "ADC_CLOCK_INTERNAL" 1 298 "0x07" "Internal 2-6us"
d G "NO_ANALOGS" 1 301 "0x0F" "None"
d G "ALL_ANALOG" 1 302 "0x00" "A0 A1 A2 A3 A5 B2 B3 B1 B4 B0"
d G "AN0_TO_AN11" 1 303 "0x03" "A0 A1 A2 A3 A5 B2 B3 B1 B4"
d G "AN0_TO_AN10" 1 304 "0x04" "A0 A1 A2 A3 A5 B2 B3 B1"
d G "AN0_TO_AN9" 1 305 "0x05" "A0 A1 A2 A3 A5 B2 B3"
d G "AN0_TO_AN8" 1 306 "0x06" "A0 A1 A2 A3 A5 B2"
d G "AN0_TO_AN4" 1 307 "0x0A" "A0 A1 A2 A3 A5"
d G "AN0_TO_AN3" 1 308 "0x0B" "A0 A1 A2 A3"
d G "AN0_TO_AN2" 1 309 "0x0C" "A0 A1 A2"
d G "AN0_TO_AN1" 1 310 "0x0D" "A0 A1"
d G "AN0" 1 311 "0x0E" "A0"
d G "AN0_TO_AN11_ANALOG" 1 312 "0x03" "!old only provided for compatibility"
d G "AN0_TO_AN10_ANALOG" 1 313 "0x04" "!old only provided for compatibility"
d G "AN0_TO_AN9_ANALOG" 1 314 "0x05" "!old only provided for compatibility"
d G "AN0_TO_AN8_ANALOG" 1 315 "0x06" "!old only provided for compatibility"
d G "AN0_TO_AN4_ANALOG" 1 316 "0x0A" "!old only provided for compatibility"
d G "AN0_TO_AN3_ANALOG" 1 317 "0x0B" "!old only provided for compatibility"
d G "AN0_TO_AN2_ANALOG" 1 318 "0x0C" "!old only provided for compatibility"
d G "AN0_TO_AN1_ANALOG" 1 319 "0x0D" "!old only provided for compatibility"
d G "AN0_ANALOG" 1 320 "0x0E" "!old only provided for compatibility"
d G "VSS_VDD" 1 323 "0x00" "Range 0-Vdd"
d G "VREF_VREF" 1 324 "0x30" "Range VrefL-VrefH"
d G "VREF_VDD" 1 325 "0x20" "Range VrefL-Vdd"
d G "VSS_VREF" 1 326 "0x10" "Range 0-VrefH"
d G "ADC_START_AND_READ" 1 330 "7" "This is the default if nothing is specified"
d G "ADC_START_ONLY" 1 331 "1"
d G "ADC_READ_ONLY" 1 332 "6"
d G "L_TO_H" 1 344 "0x40"
d G "H_TO_L" 1 345 "0"
d G "GLOBAL" 1 347 "0xF2C0"
d G "INT_RTCC" 1 348 "0xF220"
d G "INT_TIMER0" 1 349 "0xF220"
d G "INT_TIMER1" 1 350 "0x9D01"
d G "INT_TIMER2" 1 351 "0x9D02"
d G "INT_TIMER3" 1 352 "0xA002"
d G "INT_EXT" 1 353 "0xF210"
d G "INT_EXT1" 1 354 "0xF008"
d G "INT_EXT2" 1 355 "0xF010"
d G "INT_RB" 1 356 "0xFFF208"
d G "INT_AD" 1 357 "0x9D40"
d G "INT_RDA" 1 358 "0x9D20"
d G "INT_TBE" 1 359 "0x9D10"
d G "INT_SSP" 1 360 "0x9D08"
d G "INT_CCP1" 1 361 "0x9D04"
d G "INT_CCP2" 1 362 "0xA001"
d G "INT_BUSCOL" 1 363 "0xA008"
d G "INT_LOWVOLT" 1 364 "0xA004"
d G "INT_COMP" 1 365 "0xA040"
d G "INT_EEPROM" 1 366 "0xA010"
d G "INT_OSCF" 1 367 "0xA080"
d G "INT_USB" 1 368 "0xA020"
D G "USB_CON_SENSE_PIN" 0 7 "PIN_A2"
D G "usb_cdc_kbhit" 2 117 "() (usb_cdc_get_buffer_status.got)"
D G "usb_cdc_putready" 2 118 "() (usb_cdc_put_buffer_nextin<USB_CDC_DATA_IN_SIZE)"
D G "usb_cdc_connected" 2 119 "() (usb_cdc_got_set_line_coding)"
V L "c" 2 120 "int8"
F G "usb_cdc_putc_fast" 2 120 "void(int8 c)"
F G "usb_cdc_getc" 2 121 "int8()"
V L "c" 2 122 "int8"
F G "usb_cdc_putc" 2 122 "void(int8 c)" "input.c ported to use CDC:"
F G "get_float_usb" 2 125 "float()"
F G "get_long_usb" 2 126 "sint16()"
F G "get_int_usb" 2 127 "sint8()"
V L "s" 2 128 "*int8"
V L "max" 2 128 "int8"
F G "get_string_usb" 2 128 "void(*int8 s,int8 max)"
F G "gethex_usb" 2 129 "int8()"
F G "gethex1_usb" 2 130 "int8()" "functions automatically called by USB handler code"
F G "usb_isr_tkn_cdc" 2 133 "void()"
F G "usb_cdc_init" 2 134 "void()"
F G "usb_isr_tok_out_cdc_control_dne" 2 135 "void()"
F G "usb_isr_tok_in_cdc_data_dne" 2 136 "void()"
F G "usb_isr_tok_out_cdc_data_dne" 2 137 "void()"
F G "usb_cdc_flush_out_buffer" 2 139 "void()" "Tells the CCS PIC USB firmware to include HID handling code."
D G "USB_HID_DEVICE" 2 142 "FALSE"
D G "USB_CDC_DEVICE" 2 143 "TRUE"
D G "USB_CDC_COMM_IN_ENDPOINT" 2 145 "1"
D G "USB_CDC_COMM_IN_SIZE" 2 146 "8"
D G "USB_EP1_TX_ENABLE" 2 147 "USB_ENABLE_INTERRUPT"
D G "USB_EP1_TX_SIZE" 2 148 "USB_CDC_COMM_IN_SIZE"
D G "USB_CDC_DATA_IN_ENDPOINT" 2 151 "2"
D G "USB_CDC_DATA_IN_SIZE" 2 152 "64"
D G "USB_EP2_TX_ENABLE" 2 153 "USB_ENABLE_BULK"
D G "USB_EP2_TX_SIZE" 2 154 "USB_CDC_DATA_IN_SIZE"
D G "USB_CDC_DATA_OUT_ENDPOINT" 2 157 "2"
D G "USB_CDC_DATA_OUT_SIZE" 2 158 "64"
D G "USB_EP2_RX_ENABLE" 2 159 "USB_ENABLE_BULK"
D G "USB_EP2_RX_SIZE" 2 160 "USB_CDC_DATA_OUT_SIZE"
D G "__USB_PIC_PERIF__" 2 169 "1"
D G "__USB_HARDWARE__" 3 154 ""
D G "__PIC__" 3 157 "1"
D G "__USB_4550__" 3 171 ""
D G "USB_TOTAL_BUFFER_SPACE" 3 172 " ((int16)0x300)"
D G "USB_MAX_NUM_ENDPOINTS" 3 173 "16"
D G "USB_USE_FULL_SPEED" 3 177 "TRUE"
D G "USB_MAX_EP0_PACKET_LENGTH" 3 192 "64"
D G "__USB_PROTOTYPES__" 4 169 ""
D G "USB_HID_BOOT_PROTOCOL" 4 172 "FALSE"
D G "USB_HID_IDLE" 4 176 "FALSE"
D G "USB_OPT_FOR_ROM" 4 189 "TRUE" "set to false to opt for less RAM, true to opt for less ROM"
D G "USB_NUM_CONFIGURATIONS" 4 197 "1" "DO NOT CHANGE"
D G "PID_IN" 4 200 "0x09" "device to host transactions"
D G "PID_OUT" 4 201 "0x01" "host to device transactions"
D G "PID_SETUP" 4 202 "0x0D" "host to device setup transaction"
D G "PID_ACK" 4 203 "0x02" "receiver accepts error-free data packet"
D G "PID_DATA0" 4 204 "0x03" "data packet with even sync bit"
D G "PID_SOF" 4 205 "0x05" "start of framer marker and frame number"
D G "PID_NAK" 4 206 "0x0A" "receiver can't accept data or sender cant send data or has no data to transmit"
D G "PID_DATA1" 4 207 "0x0B" "data packet with odd sync bit"
D G "PID_PRE" 4 208 "0x0C" "preamble issued by host.  enables downstream traffic to low-speed device"
D G "PID_STALL" 4 209 "0x0E" "a control request isnt supported or the endpoint is halted"
D G "USB_DESC_DEVICE_TYPE" 4 212 "0x01" "#DEFINE USB_DEVICE_DESC_KEY      0x01"
D G "USB_DESC_CONFIG_TYPE" 4 213 "0x02" "#DEFINE USB_CONFIG_DESC_KEY      0x02"
D G "USB_DESC_STRING_TYPE" 4 214 "0x03" "#DEFINE USB_STRING_DESC_KEY      0x03"
D G "USB_DESC_INTERFACE_TYPE" 4 215 "0x04" "#DEFINE USB_INTERFACE_DESC_KEY   0x04"
D G "USB_DESC_ENDPOINT_TYPE" 4 216 "0x05" "#DEFINE USB_ENDPOINT_DESC_KEY    0x05"
D G "USB_DESC_CLASS_TYPE" 4 217 "0x21" "#DEFINE USB_CLASS_DESC_KEY       0x21"
D G "USB_DESC_HIDREPORT_TYPE" 4 218 "0x22"
D G "USB_DESC_DEVICE_LEN" 4 221 "18" "#DEFINE USB_DEVICE_DESC_LEN      18"
D G "USB_DESC_CONFIG_LEN" 4 222 "9" "#DEFINE USB_CONFIG_DESC_LEN      9"
D G "USB_DESC_INTERFACE_LEN" 4 223 "9" "#DEFINE USB_INTERFACE_DESC_LEN   9"
D G "USB_DESC_CLASS_LEN" 4 224 "9" "#DEFINE USB_CLASS_DESC_LEN       9"
D G "USB_DESC_ENDPOINT_LEN" 4 225 "7" "#DEFINE USB_ENDPOINT_DESC_LEN    7"
D G "USB_STANDARD_REQUEST_GET_STATUS" 4 228 "0x00"
D G "USB_STANDARD_REQUEST_CLEAR_FEATURE" 4 229 "0x01"
D G "USB_STANDARD_REQUEST_SET_FEATURE" 4 230 "0x03"
D G "USB_STANDARD_REQUEST_SET_ADDRESS" 4 231 "0x05"
D G "USB_STANDARD_REQUEST_GET_DESCRIPTOR" 4 232 "0x06"
D G "USB_STANDARD_REQUEST_SET_DESCRIPTOR" 4 233 "0x07"
D G "USB_STANDARD_REQUEST_GET_CONFIGURATION" 4 234 "0x08"
D G "USB_STANDARD_REQUEST_SET_CONFIGURATION" 4 235 "0x09"
D G "USB_STANDARD_REQUEST_GET_INTERFACE" 4 236 "0x0A"
D G "USB_STANDARD_REQUEST_SET_INTERFACE" 4 237 "0x0B"
D G "USB_STANDARD_REQUEST_SYNCH_FRAME" 4 238 "0x0C"
D G "USB_HID_REQUEST_GET_REPORT" 4 241 "0x01"
D G "USB_HID_REQUEST_GET_IDLE" 4 242 "0x02"
D G "USB_HID_REQUEST_GET_PROTOCOL" 4 243 "0x03"
D G "USB_HID_REQUEST_SET_REPORT" 4 244 "0x09"
D G "USB_HID_REQUEST_SET_IDLE" 4 245 "0x0A"
D G "USB_HID_REQUEST_SET_PROTOCOL" 4 246 "0x0B"
D G "USB_ENDPOINT_TYPE_CONTROL" 4 249 "0x00"
D G "USB_ENDPOINT_TYPE_ISOCHRONOUS" 4 250 "0x01"
D G "USB_ENDPOINT_TYPE_BULK" 4 251 "0x02"
D G "USB_ENDPOINT_TYPE_INTERRUPT" 4 252 "0x03"
D G "USB_ENABLE_DISABLED" 4 255 "0"
D G "USB_ENABLE_BULK" 4 256 "0x01"
D G "USB_ENABLE_ISOCHRONOUS" 4 257 "0x02"
D G "USB_ENABLE_INTERRUPT" 4 258 "0x03"
D G "USB_ENABLE_CONTROL" 4 259 "0x04"
C L "usb_cdc_flush_out_buffer" 4 2 1 "FUNCTION"
C L "usb_cdc_flush_out_buffer" 4 2 1 "FUNCTION"
C L "usb_cdc_flush_out_buffer" 4 2 1 "FUNCTION"
C L "usb_cdc_flush_out_buffer" 4 2 1 "FUNCTION"
C L "usb_cdc_flush_out_buffer" 4 2 1 "FUNCTION"
V G "USB_stack_status" 4 276 "{USB_STATES dev_req,int8 curr_config,int8 status_device,USB_GETDESC_TYPES getdesc_type}"
V G "__usb_kbhit_status" 4 286 "int16" "/ *** User function prototypes"
F G "usb_wait_for_enumeration" 4 289 "void()"
F G "usb_unermated" 4 290 "int8()"
V L "endpoint" 4 291 "int8"
V L "ptr" 4 291 "*int8"
V L "max" 4 291 "int16"
V L "timeout" 4 291 "int16"
F G "usb_gets" 4 291 "int8(int8 endpoint,*int8 ptr,int16 max,int16 timeout)"
V L "endpoint" 4 292 "int8"
V L "ptr" 4 292 "*int8"
V L "len" 4 292 "int16"
V L "timeout" 4 292 "int8"
F G "usb_puts" 4 292 "int8(int8 endpoint,*int8 ptr,int16 len,int8 timeout)" "/ *** Token and request hanlder function prototypes"
F G "usb_token_reset" 4 295 "void()"
F G "usb_put_0len_0" 4 297 "void()"
V L "len" 4 298 "int8"
F G "usb_request_send_response" 4 298 "void(int8 len)" "always sends usb_ep0_rx_buffer[] to endpoint 0 with a toggle of DATA"
V L "endpoint" 4 300 "int8"
V L "status" 4 300 "*int16"
V L "buffer" 4 300 "*int16"
V L "size" 4 300 "*int8"
F G "usb_match_registers" 4 300 "void(int8 endpoint,*int16 status,*int16 buffer,*int8 size)"
V L "endpoint" 4 302 "int8"
F G "usb_isr_tok_in_dne" 4 302 "void(int8 endpoint)"
V L "endpoint" 4 303 "int8"
F G "usb_isr_tok_out_dne" 4 303 "void(int8 endpoint)"
F G "usb_isr_tok_setup_dne" 4 304 "void()"
F G "usb_isr_tkn_setup_StandardEndpoint" 4 306 "void()"
F G "usb_isr_tkn_setup_StandardDevice" 4 307 "void()"
F G "usb_isr_tkn_setup_StandardInterface" 4 308 "void()"
F G "usb_Get_Descriptor" 4 314 "void()"
F G "usb_copy_desc_seg_to_ep" 4 315 "void()"
F G "usb_finish_set_address" 4 317 "void()" "*** ENABLE RX ENDPOINTS AND BUFFERS"
D G "USB_EP0_TX_ENABLE" 4 322 "USB_ENABLE_CONTROL"
D G "USB_EP0_RX_ENABLE" 4 323 "USB_ENABLE_CONTROL"
D G "USB_EP0_RX_SIZE" 4 324 "USB_MAX_EP0_PACKET_LENGTH" "endpoint 0 is setup, and should always be the MAX_PACKET_LENGTH.  Slow speed specifies 8"
D G "USB_EP0_TX_SIZE" 4 325 "USB_MAX_EP0_PACKET_LENGTH" "endpoint 0 is setup, and should always be the MAX_PACKET_LENGTH.  Slow speed specifies 8"
D G "USB_EP1_RX_ENABLE" 4 332 "USB_ENABLE_DISABLED"
D G "USB_EP1_RX_SIZE" 4 339 "0"
D G "USB_EP3_TX_ENABLE" 4 391 "USB_ENABLE_DISABLED"
D G "USB_EP3_RX_ENABLE" 4 394 "USB_ENABLE_DISABLED"
D G "USB_EP3_RX_SIZE" 4 401 "0"
D G "USB_EP3_TX_SIZE" 4 412 "0"
D G "USB_EP4_TX_ENABLE" 4 422 "USB_ENABLE_DISABLED"
D G "USB_EP4_RX_ENABLE" 4 425 "USB_ENABLE_DISABLED"
D G "USB_EP4_RX_SIZE" 4 432 "0"
D G "USB_EP4_TX_SIZE" 4 443 "0"
D G "USB_EP5_TX_ENABLE" 4 453 "USB_ENABLE_DISABLED"
D G "USB_EP5_RX_ENABLE" 4 456 "USB_ENABLE_DISABLED"
D G "USB_EP5_RX_SIZE" 4 463 "0"
D G "USB_EP5_TX_SIZE" 4 474 "0"
D G "USB_EP6_TX_ENABLE" 4 484 "USB_ENABLE_DISABLED"
D G "USB_EP6_RX_ENABLE" 4 487 "USB_ENABLE_DISABLED"
D G "USB_EP6_RX_SIZE" 4 494 "0"
D G "USB_EP6_TX_SIZE" 4 505 "0"
D G "USB_EP7_TX_ENABLE" 4 515 "USB_ENABLE_DISABLED"
D G "USB_EP7_RX_ENABLE" 4 518 "USB_ENABLE_DISABLED"
D G "USB_EP7_RX_SIZE" 4 525 "0"
D G "USB_EP7_TX_SIZE" 4 536 "0"
D G "USB_EP8_TX_ENABLE" 4 546 "USB_ENABLE_DISABLED"
D G "USB_EP8_RX_ENABLE" 4 549 "USB_ENABLE_DISABLED"
D G "USB_EP8_RX_SIZE" 4 556 "0"
D G "USB_EP8_TX_SIZE" 4 567 "0"
D G "USB_EP9_TX_ENABLE" 4 577 "USB_ENABLE_DISABLED"
D G "USB_EP9_RX_ENABLE" 4 580 "USB_ENABLE_DISABLED"
D G "USB_EP9_RX_SIZE" 4 587 "0"
D G "USB_EP9_TX_SIZE" 4 598 "0"
D G "USB_EP10_TX_ENABLE" 4 608 "USB_ENABLE_DISABLED"
D G "USB_EP10_RX_ENABLE" 4 611 "USB_ENABLE_DISABLED"
D G "USB_EP10_RX_SIZE" 4 618 "0"
D G "USB_EP10_TX_SIZE" 4 629 "0"
D G "USB_EP11_TX_ENABLE" 4 639 "USB_ENABLE_DISABLED"
D G "USB_EP11_RX_ENABLE" 4 642 "USB_ENABLE_DISABLED"
D G "USB_EP11_RX_SIZE" 4 649 "0"
D G "USB_EP11_TX_SIZE" 4 660 "0"
D G "USB_EP12_TX_ENABLE" 4 670 "USB_ENABLE_DISABLED"
D G "USB_EP12_RX_ENABLE" 4 673 "USB_ENABLE_DISABLED"
D G "USB_EP12_RX_SIZE" 4 680 "0"
D G "USB_EP12_TX_SIZE" 4 691 "0"
D G "USB_EP13_TX_ENABLE" 4 701 "USB_ENABLE_DISABLED"
D G "USB_EP13_RX_ENABLE" 4 704 "USB_ENABLE_DISABLED"
D G "USB_EP13_RX_SIZE" 4 711 "0"
D G "USB_EP13_TX_SIZE" 4 722 "0"
D G "USB_EP14_TX_ENABLE" 4 732 "USB_ENABLE_DISABLED"
D G "USB_EP14_RX_ENABLE" 4 735 "USB_ENABLE_DISABLED"
D G "USB_EP14_RX_SIZE" 4 742 "0"
D G "USB_EP14_TX_SIZE" 4 753 "0"
D G "USB_EP15_TX_ENABLE" 4 763 "USB_ENABLE_DISABLED"
D G "USB_EP15_RX_ENABLE" 4 766 "USB_ENABLE_DISABLED"
D G "USB_EP15_RX_SIZE" 4 773 "0"
D G "USB_EP15_TX_SIZE" 4 784 "0"
V G "usb_ep_tx_type" 4 791 "int8[16]"
V G "usb_ep_rx_type" 4 800 "int8[16]"
V G "usb_ep_tx_size" 4 809 "int16[16]"
V G "usb_ep_rx_size" 4 818 "int16[16]"
D G "USB_BUFFER_NEEDED" 3 198 " (USB_EP0_TX_SIZE+USB_EP0_RX_SIZE+USB_EP1_TX_SIZE+USB_EP1_RX_SIZE+USB_EP2_TX_SIZE+USB_EP2_RX_SIZE+USB_EP3_TX_SIZE+USB_EP3_RX_SIZE+USB_EP4_TX_SIZE+USB_EP4_RX_SIZE+USB_EP5_TX_SIZE+USB_EP5_RX_SIZE+USB_EP6_TX_SIZE+USB_EP6_RX_SIZE+USB_EP7_TX_SIZE+USB_EP7_RX_SIZE+USB_EP8_TX_SIZE+USB_EP8_RX_SIZE+USB_EP9_TX_SIZE+USB_EP9_RX_SIZE+USB_EP10_TX_SIZE+USB_EP10_RX_SIZE+USB_EP11_TX_SIZE+USB_EP11_RX_SIZE+USB_EP12_TX_SIZE+USB_EP12_RX_SIZE+USB_EP13_TX_SIZE+USB_EP13_RX_SIZE+USB_EP14_TX_SIZE+USB_EP14_RX_SIZE+USB_EP15_TX_SIZE+USB_EP15_RX_SIZE)"
D G "debug_usb" 3 210 "(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z)"
D G "debug_display_ram" 3 213 "(x,y)"
D G "USB_IGNORE_RX_DTS" 3 232 "FALSE"
D G "USB_IGNORE_TX_DTS" 3 236 "FALSE"
D G "USB_USE_ERROR_COUNTER" 3 242 "FALSE"
D G "USB_PING_PONG_MODE_OFF" 3 245 "0" "no ping pong"
D G "USB_PING_PONG_MODE_E0" 3 246 "1" "ping pong endpoint 0 only"
D G "USB_PING_PONG_MODE_ON" 3 247 "2" "ping pong all endpoints"
D G "USB_PING_PONG_MODE" 3 251 "USB_PING_PONG_MODE_OFF"
C L "usb_finish_set_address" 3 211 1 "FUNCTION"
D G "UEP0_LOC" 3 270 "0xF70"
D G "USB_BUFFER" 3 291 "0x500"
D G "BD0STAT_LOC" 3 299 "0x400"
D G "BD0CNT_LOC" 3 300 "0x401"
D G "BD0ADRL_LOC" 3 301 "0x402"
D G "BD0ADRH_LOC" 3 302 "0x403"
D G "UEP" 3 304 "(x) *(UEP0_LOC+x)"
D G "EP_BDxST_O" 3 330 "(x)    *(BD0STAT_LOC + x*8)"
D G "EP_BDxCNT_O" 3 331 "(x)    *(BD0CNT_LOC + x*8)"
D G "EP_BDxADR_O" 3 332 "(x)   *(int16 *)(BD0ADRL_LOC + x*8)"
D G "EP_BDxST_I" 3 333 "(x)    *(BD0STAT_LOC + 4 + x*8)"
D G "EP_BDxCNT_I" 3 334 "(x)    *(BD0CNT_LOC + 4 + x*8)"
D G "EP_BDxADR_I" 3 335 "(x)   *(int16 *)(BD0ADRL_LOC + 4 + x*8)"
D G "ENDPT_DISABLED" 3 341 "0x00" "endpoint not used"
D G "ENDPT_IN_ONLY" 3 342 "0x02" "endpoint supports IN transactions only"
D G "ENDPT_OUT_ONLY" 3 343 "0x04" "endpoint supports OUT transactions only"
D G "ENDPT_CONTROL" 3 344 "0x06" "Supports IN, OUT and CONTROL transactions - Only use with EP0"
D G "ENDPT_NON_CONTROL" 3 345 "0x0E" "Supports both IN and OUT transactions"
C L "usb_finish_set_address" 3 211 1 "FUNCTION"
V G "usb_state" 3 349 ""
D G "USB_PIC_PID_IN" 3 352 "0x24" "device to host transactions"
D G "USB_PIC_PID_OUT" 3 353 "0x04" "host to device transactions"
D G "USB_PIC_PID_SETUP" 3 354 "0x34" "host to device setup transaction"
D G "USTAT_IN_E0" 3 356 "4"
D G "USTAT_OUT_SETUP_E0" 3 357 "0"
D G "__USB_UIF_RESET" 3 359 "0x01"
D G "__USB_UIF_ERROR" 3 360 "0x02"
D G "__USB_UIF_ACTIVE" 3 361 "0x04"
D G "__USB_UIF_TOKEN" 3 362 "0x08"
D G "__USB_UIF_IDLE" 3 363 "0x10"
D G "__USB_UIF_STALL" 3 364 "0x20"
D G "__USB_UIF_SOF" 3 365 "0x40"
D G "STANDARD_INTS" 3 370 "0x3D"
D G "__USB_UCFG_UTEYE" 3 373 "0x80"
D G "__USB_UCFG_UOEMON" 3 375 "0x40"
D G "__USB_UCFG_UPUEN" 3 377 "0x10"
D G "__USB_UCFG_UTRDIS" 3 378 "0x08"
D G "__USB_UCFG_FSEN" 3 379 "0x04"
D G "__UCFG_VAL_ENABLED__" 3 382 " (__USB_UCFG_UPUEN | __USB_UCFG_FSEN | USB_PING_PONG_MODE)"
D G "__UCFG_VAL_DISABLED__" 3 387 "0x08"
V G "usb_ep0_rx_buffer" 3 389 "int8[64]"
V G "usb_ep0_tx_buffer" 3 392 "int8[64]"
V G "usb_data_buffer" 3 395 "int8[640]"
V G "__setup_0_tx_size" 3 398 "int8" "interrupt handler, specific to PIC18Fxx5x peripheral only"
F G "usb_handle_interrupt" 3 401 "void()"
F G "usb_isr_rst" 3 402 "void()"
F G "usb_isr_uerr" 3 403 "void()"
F G "usb_isr_sof" 3 404 "void()"
F G "usb_isr_activity" 3 405 "void()"
F G "usb_isr_uidle" 3 406 "void()"
F G "usb_isr_tok_dne" 3 407 "void()"
F G "usb_isr_stall" 3 408 "void()"
F G "usb_init_ep0_setup" 3 409 "void()" "following functions standard part of CCS PIC USB driver, and used by usb.c"
F G "usb_init" 3 412 "void()"
F G "usb_detach" 3 413 "void()"
V L "endpoint" 3 414 "int8"
V L "ptr" 3 414 "*int8"
V L "len" 3 414 "int16"
V L "tgl" 3 414 "USB_DTS_BIT"
F G "usb_put_packet" 3 414 "int8(int8 endpoint,*int8 ptr,int16 len,USB_DTS_BIT tgl)"
V L "endpoint" 3 415 "int8"
V L "len" 3 415 "int16"
V L "tgl" 3 415 "USB_DTS_BIT"
F G "usb_flush_in" 3 415 "int8(int8 endpoint,int16 len,USB_DTS_BIT tgl)" "marks the transmit buffer as ready for transmission"
V L "endpoint" 3 416 "int8"
V L "ptr" 3 416 "*int8"
V L "max" 3 416 "int16"
F G "usb_get_packet" 3 416 "int16(int8 endpoint,*int8 ptr,int16 max)"
V L "endpoint" 3 417 "int8"
F G "usb_rx_packet_size" 3 417 "int16(int8 endpoint)"
V L "endpoint" 3 418 "int8"
V L "ptr" 3 418 "*int8"
V L "max" 3 418 "int16"
F G "usb_get_packet_buffer" 3 418 "int16(int8 endpoint,*int8 ptr,int16 max)"
V L "endpoint" 3 419 "int8"
V L "tgl" 3 419 "USB_DTS_BIT"
F G "usb_flush_out" 3 419 "void(int8 endpoint,USB_DTS_BIT tgl)"
V L "endpoint" 3 420 "int8"
F G "usb_stall_ep" 3 420 "void(int8 endpoint)"
V L "endpoint" 3 421 "int8"
F G "usb_unstall_ep" 3 421 "void(int8 endpoint)"
V L "endpoint" 3 422 "int8"
F G "usb_endpoint_stalled" 3 422 "int8(int8 endpoint)"
V L "address" 3 423 "int8"
F G "usb_set_address" 3 423 "void(int8 address)"
V L "config" 3 424 "int8"
F G "usb_set_configured" 3 424 "void(int8 config)"
F G "usb_disable_endpoints" 3 425 "void()" "BEGIN User Functions:"
D G "usb_attached" 3 436 "() input(USB_CON_SENSE_PIN)"
C L "usb_disable_endpoints" 3 211 5 "FUNCTION"
F G "usb_detach" 3 447 "void()" "done"
C L "usb_detach" 3 211 1 "FUNCTION"
C L "usb_detach" 3 211 1 "FUNCTION"
C L "usb_detach" 3 211 1 "FUNCTION"
C L "usb_attach" 3 211 7 "FUNCTION"
F G "usb_attach" 3 465 "void()"
C L "usb_attach" 3 211 1 "FUNCTION"
C L "usb_attach" 3 211 1 "FUNCTION"
C L "usb_attach" 3 211 1 "FUNCTION"
D G "usb_init_cs" 3 487 "usb_detach"
C L "usb_task" 3 211 13 "FUNCTION"
F G "usb_task" 3 503 "void()"
C L "usb_task" 3 211 1 "FUNCTION"
C L "usb_init" 3 211 15 "FUNCTION"
F G "usb_init" 3 544 "void()"
C L "usb_flush_in" 3 211 12 "FUNCTION"
V L "endpoint" 3 566 "int8"
V L "len" 3 566 "int16"
V L "tgl" 3 566 "USB_DTS_BIT"
F G "usb_flush_in" 3 566 "int8(int8 endpoint,int16 len,USB_DTS_BIT tgl)"
V L "i" 3 567 "int8"
C L "usb_flush_in" 3 211 1 "FUNCTION"
C L "usb_flush_in" 3 211 1 "FUNCTION"
C L "usb_flush_in" 3 211 1 "FUNCTION"
C L "usb_flush_in" 3 211 1 "FUNCTION"
C L "usb_flush_in" 3 211 1 "FUNCTION"
C L "usb_flush_in" 3 211 1 "FUNCTION"
C L "usb_put_packet" 3 211 21 "FUNCTION"
V L "endpoint" 3 641 "int8"
V L "ptr" 3 641 "*int8"
V L "len" 3 641 "int16"
V L "tgl" 3 641 "USB_DTS_BIT"
F G "usb_put_packet" 3 641 "int8(int8 endpoint,*int8 ptr,int16 len,USB_DTS_BIT tgl)" "done"
V L "j" 3 642 "int16"
V L "i" 3 643 "int8"
V L "buff_add" 3 644 "*int8"
C L "usb_flush_out" 3 211 13 "FUNCTION"
V L "endpoint" 3 682 "int8"
V L "tgl" 3 682 "USB_DTS_BIT"
F G "usb_flush_out" 3 682 "void(int8 endpoint,USB_DTS_BIT tgl)"
V L "i" 3 683 "int8"
V L "len" 3 684 "int16"
C L "usb_flush_out" 3 211 1 "FUNCTION"
C L "usb_flush_out" 3 211 1 "FUNCTION"
C L "usb_flush_out" 3 211 1 "FUNCTION"
C L "usb_flush_out" 3 211 1 "FUNCTION"
C L "usb_flush_out" 3 211 1 "FUNCTION"
V L "endpoint" 3 726 "int8"
F G "usb_rx_packet_size" 3 726 "int16(int8 endpoint)"
C L "usb_get_packet_buffer" 3 211 14 "FUNCTION"
V L "endpoint" 3 745 "int8"
V L "ptr" 3 745 "*int8"
V L "max" 3 745 "int16"
F G "usb_get_packet_buffer" 3 745 "int16(int8 endpoint,*int8 ptr,int16 max)"
V L "al" 3 746 "*int8"
V L "st" 3 747 "int8"
V L "i" 3 748 "int16"
C L "usb_get_packet_buffer" 3 211 1 "FUNCTION"
C L "usb_get_packet" 3 211 17 "FUNCTION"
V L "endpoint" 3 790 "int8"
V L "ptr" 3 790 "*int8"
V L "max" 3 790 "int16"
F G "usb_get_packet" 3 790 "int16(int8 endpoint,*int8 ptr,int16 max)"
C L "usb_tbe" 3 211 11 "FUNCTION"
V L "endpoint" 3 810 "int8"
F G "usb_tbe" 3 810 "int8(int8 endpoint,*int8 ptr,int16 max)"
V L "st" 3 811 "int8"
C L "usb_stall_ep" 3 211 12 "FUNCTION"
V L "endpoint" 3 831 "int8"
F G "usb_stall_ep" 3 831 "void(int8 endpoint)" "done"
V L "direction" 3 832 "int1"
C L "usb_unstall_ep" 3 211 9 "FUNCTION"
V L "endpoint" 3 853 "int8"
F G "usb_unstall_ep" 3 853 "void(int8 endpoint)" "done"
V L "direction" 3 854 "int1"
C L "usb_endpoint_stalled" 3 211 14 "FUNCTION"
V L "endpoint" 3 884 "int8"
F G "usb_endpoint_stalled" 3 884 "int8(int8 endpoint)" "done"
V L "direction" 3 885 "int1"
V L "st" 3 886 "int8"
C L "usb_set_address" 3 211 8 "FUNCTION"
V L "address" 3 908 "int8"
F G "usb_set_address" 3 908 "void(int8 address)" "done"
C L "usb_set_configured" 3 211 11 "FUNCTION"
V L "config" 3 931 "int8"
F G "usb_set_configured" 3 931 "void(int8 config)"
V L "en" 3 932 "int8"
V L "addy" 3 933 "int16"
V L "new_uep" 3 934 "int8"
V L "len" 3 935 "int16"
V L "i" 3 936 "int8"
C L "usb_set_configured" 3 211 1 "FUNCTION"
C L "usb_set_configured" 3 211 1 "FUNCTION"
C L "usb_isr" 3 211 13 "FUNCTION"
F G "usb_isr" 3 995 "void()"
C L "usb_isr" 3 211 1 "FUNCTION"
C L "usb_isr" 3 211 1 "FUNCTION"
C L "usb_isr" 3 211 1 "FUNCTION"
C L "usb_isr" 3 211 1 "FUNCTION"
C L "usb_isr" 3 211 1 "FUNCTION"
C L "usb_isr" 3 211 1 "FUNCTION"
C L "usb_isr" 3 211 1 "FUNCTION"
C L "usb_isr" 3 211 1 "FUNCTION"
C L "usb_isr_sof" 3 211 1 "FUNCTION"
F G "usb_isr_sof" 3 1019 "void()"
C L "usb_disable_endpoints" 3 211 5 "FUNCTION"
F G "usb_disable_endpoints" 3 1030 "void()"
V L "i" 3 1031 "int8"
C L "usb_isr_rst" 3 211 6 "FUNCTION"
F G "usb_isr_rst" 3 1045 "void()"
C L "usb_isr_rst" 3 211 1 "FUNCTION"
C L "usb_isr_rst" 3 211 1 "FUNCTION"
C L "usb_isr_rst" 3 211 1 "FUNCTION"
C L "usb_init_ep0_setup" 3 211 5 "FUNCTION"
F G "usb_init_ep0_setup" 3 1078 "void()"
C L "usb_init_ep0_setup" 3 211 1 "FUNCTION"
C L "usb_isr_uerr" 3 211 7 "FUNCTION"
F G "usb_isr_uerr" 3 1099 "void()"
C L "usb_isr_uidle" 3 211 5 "FUNCTION"
F G "usb_isr_uidle" 3 1151 "void()"
C L "usb_isr_uidle" 3 211 1 "FUNCTION"
C L "usb_isr_uidle" 3 211 1 "FUNCTION"
C L "usb_isr_uidle" 3 211 1 "FUNCTION"
C L "usb_isr_activity" 3 211 6 "FUNCTION"
F G "usb_isr_activity" 3 1167 "void()"
C L "usb_isr_activity" 3 211 1 "FUNCTION"
C L "usb_isr_activity" 3 211 1 "FUNCTION"
C L "usb_isr_stall" 3 211 5 "FUNCTION"
F G "usb_isr_stall" 3 1181 "void()"
C L "usb_isr_tok_dne" 3 211 13 "FUNCTION"
F G "usb_isr_tok_dne" 3 1206 "void()"
V L "en" 3 1207 "int8"
C L "usb_isr_tok_dne" 3 211 1 "FUNCTION"
C L "usb_isr_tok_dne" 3 211 1 "FUNCTION"
C L "usb_isr_tok_dne" 3 211 3 "FUNCTION"
C L "usb_isr_tok_dne" 3 211 1 "FUNCTION"
C L "usb_isr_tok_dne" 3 211 1 "FUNCTION"
C L "usb_isr_tok_dne" 3 211 1 "FUNCTION"
C L "usb_request_send_response" 3 211 23 "FUNCTION"
V L "len" 3 1289 "int8"
F G "usb_request_send_response" 3 1289 "void(int8 len)"
F G "usb_request_get_data" 3 1293 "void(int8 len)"
F G "usb_request_stall" 3 1297 "void()"
D G "__USB_DESCRIPTORS__" 5 31 ""
D G "USB_TOTAL_CONFIG_LEN" 5 44 "67" "config+interface+class+endpoint+endpoint (2 endpoints)"
V G "USB_CONFIG_DESC" 5 46 "int8[1]" "IN ORDER TO COMPLY WITH WINDOWS HOSTS, THE ORDER OF THIS ARRAY MUST BE:"
D G "USB_MAX_NUM_INTERFACES" 5 144 "2"
V G "USB_NUM_INTERFACES" 5 147 "int8[1]"
V G "USB_CLASS_DESCRIPTORS" 5 154 "int16[1][2][4]" "config 1"
V G "USB_DEVICE_DESC" 5 176 "int8[18]" "starts of with device configuration. only one possible"
V G "USB_STRING_DESC_OFFSET" 5 206 "int8[1]"
V G "USB_STRING_DESC" 5 208 "int8[1]" "string 0"
D G "__USB_DRIVER__" 6 177 ""
V G "USB_address_pending" 6 189 "int8" "save previous state because packets can take several isrs"
V G "usb_getdesc_ptr" 6 190 "int8"
V G "usb_getdesc_len" 6 190 "int8"
V G "USB_Interface" 6 196 "int8[2]" "config state for all of our interfaces, NUM_INTERFACES defined with descriptors"
D G "usb_kbhit" 6 210 "(x) bit_test(__usb_kbhit_status,x)"
D G "usb_enumerated" 6 221 "() (USB_stack_status.curr_config)"
C L "usb_wait_for_enumeration" 6 190 6 "FUNCTION"
F G "usb_wait_for_enumeration" 6 230 "void()"
C L "usb_puts" 6 190 12 "FUNCTION"
V L "endpoint" 6 247 "int8"
V L "ptr" 6 247 "*int8"
V L "len" 6 247 "int16"
V L "timeout" 6 247 "int8"
F G "usb_puts" 6 247 "int8(int8 endpoint,*int8 ptr,int16 len,int8 timeout)"
V L "i" 6 248 "int16"
V L "res" 6 249 "int1"
V L "this_packet_len" 6 250 "int16"
V L "packet_size" 6 251 "int16"
V L "timeout_1us" 6 252 "int32"
C L "usb_puts" 6 190 1 "FUNCTION"
C L "usb_puts" 6 190 1 "FUNCTION"
C L "usb_puts" 6 190 1 "FUNCTION"
C L "usb_puts" 6 190 1 "FUNCTION"
C L "usb_gets" 6 190 17 "FUNCTION"
V L "endpoint" 6 305 "int8"
V L "ptr" 6 305 "*int8"
V L "max" 6 305 "int16"
V L "timeout" 6 305 "int16"
F G "usb_gets" 6 305 "int8(int8 endpoint,*int8 ptr,int16 max,int16 timeout)"
V L "ret" 6 306 "int16"
V L "to" 6 307 "int16"
V L "len" 6 308 "int16"
V L "packet_size" 6 309 "int16"
V L "this_packet_max" 6 310 "int16"
C L "usb_token_reset" 6 190 9 "FUNCTION"
F G "usb_token_reset" 6 348 "void()"
V L "i" 6 349 "int8"
C L "usb_token_reset" 6 190 1 "FUNCTION"
C L "usb_token_reset" 6 190 1 "FUNCTION"
C L "usb_token_reset" 6 190 1 "FUNCTION"
C L "usb_token_reset" 6 190 1 "FUNCTION"
D G "usb_put_0len_0" 6 375 "() usb_request_send_response(0)"
C L "usb_endpoint_is_valid" 6 190 10 "FUNCTION"
V L "endpoint" 6 389 "int8"
F G "usb_endpoint_is_valid" 6 389 "int8(int8 endpoint)"
V L "direction" 6 390 "int1"
C L "usb_endpoint_is_valid" 6 190 1 "FUNCTION"
C L "usb_endpoint_is_valid" 6 190 1 "FUNCTION"
C L "usb_isr_tok_in_dne" 6 190 16 "FUNCTION"
V L "endpoint" 6 419 "int8"
F G "usb_isr_tok_in_dne" 6 419 "void(int8 endpoint)"
C L "usb_isr_tok_in_dne" 6 190 1 "FUNCTION"
C L "usb_isr_tok_in_dne" 6 190 1 "FUNCTION"
C L "usb_isr_tok_out_dne" 6 190 10 "FUNCTION"
V L "endpoint" 6 442 "int8"
F G "usb_isr_tok_out_dne" 6 442 "void(int8 endpoint)" "TODO:"
C L "usb_isr_tok_out_dne" 6 190 1 "FUNCTION"
C L "usb_isr_tok_setup_dne" 6 190 32 "FUNCTION"
F G "usb_isr_tok_setup_dne" 6 497 "void()"
C L "usb_isr_tok_setup_dne" 6 190 1 "FUNCTION"
C L "usb_isr_tok_setup_dne" 6 190 1 "FUNCTION"
C L "usb_isr_tok_setup_dne" 6 190 1 "FUNCTION"
C L "usb_isr_tok_setup_dne" 6 190 1 "FUNCTION"
C L "usb_isr_tok_setup_dne" 6 190 1 "FUNCTION"
C L "usb_isr_tkn_setup_StandardDevice" 6 190 10 "FUNCTION"
F G "usb_isr_tkn_setup_StandardDevice" 6 549 "void()"
C L "usb_isr_tkn_setup_StandardDevice" 6 190 1 "FUNCTION"
C L "usb_isr_tkn_setup_StandardDevice" 6 190 1 "FUNCTION"
C L "usb_isr_tkn_setup_StandardDevice" 6 190 1 "FUNCTION"
C L "usb_isr_tkn_setup_StandardDevice" 6 190 1 "FUNCTION"
C L "usb_isr_tkn_setup_StandardDevice" 6 190 1 "FUNCTION"
C L "usb_isr_tkn_setup_StandardDevice" 6 190 1 "FUNCTION"
C L "usb_isr_tkn_setup_StandardDevice" 6 190 1 "FUNCTION"
C L "usb_isr_tkn_setup_StandardDevice" 6 190 1 "FUNCTION"
C L "usb_isr_tkn_setup_StandardInterface" 6 190 10 "FUNCTION"
F G "usb_isr_tkn_setup_StandardInterface" 6 628 "void()"
V L "curr_config" 6 629 "int8"
C L "usb_isr_tkn_setup_StandardInterface" 6 190 1 "FUNCTION"
C L "usb_isr_tkn_setup_StandardInterface" 6 190 1 "FUNCTION"
C L "usb_isr_tkn_setup_StandardInterface" 6 190 1 "FUNCTION"
C L "usb_isr_tkn_setup_StandardInterface" 6 190 1 "FUNCTION"
C L "usb_isr_tkn_setup_StandardInterface" 6 190 3 "FUNCTION"
C L "usb_isr_tkn_setup_StandardEndpoint" 6 190 10 "FUNCTION"
F G "usb_isr_tkn_setup_StandardEndpoint" 6 688 "void()"
C L "usb_Get_Descriptor" 6 190 26 "FUNCTION"
F G "usb_Get_Descriptor" 6 786 "void()"
C L "usb_Get_Descriptor" 6 190 1 "FUNCTION"
C L "usb_Get_Descriptor" 6 190 1 "FUNCTION"
C L "usb_Get_Descriptor" 6 190 1 "FUNCTION"
C L "usb_Get_Descriptor" 6 190 1 "FUNCTION"
C L "usb_finish_set_address" 6 190 11 "FUNCTION"
F G "usb_finish_set_address" 6 857 "void()"
C L "usb_finish_set_address" 6 190 1 "FUNCTION"
C L "usb_finish_set_address" 6 190 1 "FUNCTION"
C L "usb_copy_desc_seg_to_ep" 6 190 3 "FUNCTION"
F G "usb_copy_desc_seg_to_ep" 6 874 "void()"
V L "i" 6 875 "int8"
V L "c" 6 876 "int8"
V G "usb_cdc_line_coding" 2 189 "{int32 dwDTERrate,int8 bCharFormat,int8 bParityType,int8 bDataBits}" "length of time, in ms, of break signal as we received in a SendBreak message."
V G "usb_cdc_break" 2 193 "int16"
V G "usb_cdc_encapsulated_cmd" 2 195 "int8[8]"
V G "usb_cdc_put_buffer" 2 197 "int8[64]"
V G "usb_cdc_put_buffer_free" 2 198 "int1"
V G "usb_cdc_put_buffer_nextin" 2 203 "int8"
V G "usb_cdc_get_buffer_status" 2 216 "{int1 got,int8 len,int8 index}"
V G "usb_cdc_get_buffer_status_buffer" 2 218 "int8[64]"
V G "usb_cdc_got_set_line_coding" 2 232 "int1"
V G "usb_cdc_carrier" 2 238 "{int1 dte_present,int1 active,int6 reserved}"
V G "__usb_cdc_state" 2 240 ""
C L "usb_isr_tok_out_cdc_control_dne" 2 185 1 "FUNCTION"
F G "usb_isr_tok_out_cdc_control_dne" 2 246 "void()"
C L "usb_isr_tok_out_cdc_control_dne" 2 185 1 "FUNCTION"
C L "usb_isr_tok_out_cdc_control_dne" 2 185 1 "FUNCTION"
C L "usb_isr_tok_out_cdc_control_dne" 2 185 2 "FUNCTION"
C L "usb_isr_tkn_cdc" 2 185 1 "FUNCTION"
F G "usb_isr_tkn_cdc" 2 286 "void()" "make sure the request goes to a CDC interface"
C L "usb_isr_tkn_cdc" 2 185 1 "FUNCTION"
C L "usb_isr_tkn_cdc" 2 185 1 "FUNCTION"
C L "usb_isr_tkn_cdc" 2 185 1 "FUNCTION"
C L "usb_isr_tkn_cdc" 2 185 1 "FUNCTION"
C L "usb_isr_tkn_cdc" 2 185 1 "FUNCTION"
C L "usb_isr_tkn_cdc" 2 185 1 "FUNCTION"
C L "usb_isr_tkn_cdc" 2 185 1 "FUNCTION"
C L "usb_isr_tkn_cdc" 2 185 1 "FUNCTION"
C L "usb_isr_tkn_cdc" 2 185 1 "FUNCTION"
C L "usb_isr_tok_out_cdc_data_dne" 2 185 1 "FUNCTION"
F G "usb_isr_tok_out_cdc_data_dne" 2 331 "void()"
C L "usb_isr_tok_in_cdc_data_dne" 2 185 1 "FUNCTION"
F G "usb_isr_tok_in_cdc_data_dne" 2 348 "void()"
C L "usb_isr_tok_in_cdc_data_dne" 2 185 5 "FUNCTION"
C L "usb_isr_tok_in_cdc_data_dne" 2 185 1 "FUNCTION"
F G "usb_cdc_flush_out_buffer" 2 364 "void()"
C L "usb_cdc_flush_out_buffer" 2 185 2 "FUNCTION"
F G "usb_cdc_init" 2 374 "void()"
C L "usb_cdc_getc" 2 185 2 "FUNCTION"
F G "usb_cdc_getc" 2 391 "int8()"
V L "c" 2 392 "int8"
V L "c" 2 405 "int8"
F G "usb_cdc_putc_fast" 2 405 "void(int8 c)"
V L "old_gie" 2 406 "int1" "disable global interrupts"
C L "usb_cdc_putc_fast" 2 185 1 "FUNCTION"
C L "usb_cdc_putc_fast" 2 185 1 "FUNCTION"
C L "usb_cdc_putc_fast" 2 185 3 "FUNCTION"
V L "c" 2 431 "int8"
F G "usb_cdc_putc" 2 431 "void(int8 c)"
C L "usb_cdc_putc" 2 185 2 "FUNCTION"
D G "_CTYPE" 7 12 ""
D G "islower" 7 14 "(x)  isamong(x,"abcdefghijklmnopqrstuvwxyz")"
D G "isupper" 7 15 "(x)  isamong(x,"ABCDEFGHIJKLMNOPQRSTUVWXYZ")"
D G "isalnum" 7 16 "(x)  isamong(x,"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz")"
D G "isalpha" 7 17 "(x)  isamong(x,"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz")"
D G "isdigit" 7 18 "(x)  isamong(x,"0123456789")"
D G "isspace" 7 19 "(x)  ((x)==' ')"
D G "isxdigit" 7 20 "(x) isamong(x,"0123456789ABCDEFabcdef")"
D G "iscntrl" 7 21 "(x)  ((x)<' ')"
D G "isprint" 7 22 "(x)  ((x)>=' ')"
D G "isgraph" 7 23 "(x)  ((x)>' ')"
D G "ispunct" 7 24 "(x)  (((x)>' ')&&!isalnum(x))"
F G "gethex1_usb" 2 444 "int8()"
V L "digit" 2 445 "int8"
F G "gethex_usb" 2 457 "int8()"
V L "lo" 2 458 "int8"
V L "hi" 2 458 "int8"
V L "s" 2 468 "*int8"
V L "max" 2 468 "int8"
F G "get_string_usb" 2 468 "void(*int8 s,int8 max)"
V L "len" 2 469 "int8"
V L "c" 2 470 "int8"
C L "get_string_usb" 2 476 1 "FUNCTION"
D G "use_portb_lcd" 8 39 "TRUE"
V G "lcd" 8 48 "{int1 enable,int1 rs,int1 rw,int1 unused,int4 data}" "#locate lcd = getenv("sfr:PORTB")    // This puts the entire structure over the port"
D G "set_tris_lcd" 8 58 "(x) set_tris_b(x)"
D G "lcd_type" 8 70 "2" "0=5x7, 1=5x10, 2=2 lines"
D G "lcd_line_two" 8 73 "0x40" "LCD RAM address for the second line"
V G "LCD_INIT_STRING" 8 76 "int8[4]"
V G "LCD_WRITE" 8 84 "{int1 enable,int1 rs,int1 rw,int1 unused,int4 data}"
V G "LCD_READ" 8 85 "{int1 enable,int1 rs,int1 rw,int1 unused,int4 data}"
C L "lcd_read_byte" 8 2 1 "FUNCTION"
F G "lcd_read_byte" 8 89 "int8()"
V L "low" 8 90 "int8"
V L "high" 8 90 "int8"
V L "n" 8 108 "int8"
F G "lcd_send_nibble" 8 108 "void(int8 n)"
V L "address" 8 117 "int8"
V L "n" 8 117 "int8"
F G "lcd_send_byte" 8 117 "void(int8 address,int8 n)"
F G "lcd_init" 8 131 "void()"
V L "i" 8 132 "int8"
V L "x" 8 148 "int8"
V L "y" 8 148 "int8"
F G "lcd_gotoxy" 8 148 "void(int8 x,int8 y)"
V L "address" 8 149 "int8"
V L "c" 8 159 "int8"
F G "lcd_putc" 8 159 "void(int8 c)"
V L "x" 8 170 "int8"
V L "y" 8 170 "int8"
F G "lcd_getc" 8 170 "int8(int8 x,int8 y)"
V L "value" 8 171 "int8"
C L "lcd_getc" 8 2 1 "FUNCTION"
D G "_STRING" 9 12 ""
D G "_STDDEF" 10 13 ""
D G "ptrdiff_t" 10 18 "unsigned int16"
D G "size_t" 10 21 "unsigned int8"
D G "wchar_t" 10 22 "char"
D G "NULL" 10 23 "0"
D G "offsetof" 10 25 "(s,f) (offsetofbit(s,f)/8)"
C L "memmove" 7 2 7 "FUNCTION"
C L "memmove" 9 19 10 "FUNCTION"
V L "s1" 9 34 "*int8"
V L "s2" 9 34 "*int8"
V L "n" 9 34 "int8"
F G "memmove" 9 35 "*int8(*int8 s1,*int8 s2,int8 n)"
V L "sc1" 9 36 "*int8"
V L "sc2" 9 37 "*int8"
C L "strcopy" 9 19 3 "FUNCTION"
V L "s1" 9 53 "*int8"
V L "s2" 9 53 "*int8"
F G "strcopy" 9 54 "*int8(*int8 s1,*int8 s2)"
V L "s" 9 55 "*int8"
C L "strncpy" 9 19 4 "FUNCTION"
V L "s1" 9 69 "*int8"
V L "s2" 9 69 "*int8"
V L "n" 9 69 "int8"
F G "strncpy" 9 70 "*int8(*int8 s1,*int8 s2,int8 n)"
V L "s" 9 71 "*int8"
C L "strcat" 9 19 3 "FUNCTION"
V L "s1" 9 86 "*int8"
V L "s2" 9 86 "*int8"
F G "strcat" 9 87 "*int8(*int8 s1,*int8 s2)"
V L "s" 9 88 "*int8"
C L "strncat" 9 19 2 "FUNCTION"
V L "s1" 9 104 "*int8"
V L "s2" 9 104 "*int8"
V L "n" 9 104 "int8"
F G "strncat" 9 105 "*int8(*int8 s1,*int8 s2,int8 n)"
V L "s" 9 106 "*int8"
C L "memcmp" 9 19 3 "FUNCTION"
V L "s1" 9 128 "*int8"
V L "s2" 9 128 "*int8"
V L "n" 9 128 "int8"
F G "memcmp" 9 129 "sint8(*int8 s1,*int8 s2,int8 n)"
V L "su1" 9 130 "*int8"
V L "su2" 9 130 "*int8"
C L "strcmp" 9 19 2 "FUNCTION"
V L "s1" 9 142 "*int8"
V L "s2" 9 142 "*int8"
F G "strcmp" 9 143 "sint8(*int8 s1,*int8 s2)"
C L "strcoll" 9 19 2 "FUNCTION"
V L "s1" 9 152 "*int8"
V L "s2" 9 152 "*int8"
F G "strcoll" 9 153 "sint8(*int8 s1,*int8 s2)"
C L "strncmp" 9 19 4 "FUNCTION"
V L "s1" 9 165 "*int8"
V L "s2" 9 165 "*int8"
V L "n" 9 165 "int8"
F G "strncmp" 9 166 "sint8(*int8 s1,*int8 s2,int8 n)"
C L "strxfrm" 9 19 3 "FUNCTION"
V L "s1" 9 177 "*int8"
V L "s2" 9 177 "*int8"
V L "n" 9 177 "int8"
F G "strxfrm" 9 178 "int8(*int8 s1,*int8 s2,int8 n)"
V L "s" 9 179 "*int8"
V L "n1" 9 180 "int8"
C L "memchr" 9 19 3 "FUNCTION"
V L "s" 9 199 "*int8"
V L "c" 9 199 "int8"
V L "n" 9 199 "int8"
F G "memchr" 9 200 "*int8(*int8 s,int8 c,int8 n)"
V L "uc" 9 201 "int8"
V L "su" 9 202 "*int8"
C L "strchr" 9 19 2 "FUNCTION"
V L "s" 9 213 "*int8"
V L "c" 9 213 "int8"
F G "strchr" 9 214 "*int8(*int8 s,int8 c)"
V L "s1" 9 225 "*int8"
V L "s2" 9 225 "*int8"
F G "strcspn" 9 226 "*int8(*int8 s1,*int8 s2)"
V L "sc1" 9 227 "*int8"
V L "sc2" 9 227 "*int8"
C L "strpbrk" 9 19 4 "FUNCTION"
V L "s1" 9 240 "*int8"
V L "s2" 9 240 "*int8"
F G "strpbrk" 9 241 "*int8(*int8 s1,*int8 s2)"
V L "sc1" 9 242 "*int8"
V L "sc2" 9 242 "*int8"
C L "strrchr" 9 19 2 "FUNCTION"
V L "s" 9 255 "*int8"
V L "c" 9 255 "int8"
F G "strrchr" 9 256 "*int8(*int8 s,int8 c)"
V L "p" 9 257 "*int8"
V L "s1" 9 270 "*int8"
V L "s2" 9 270 "*int8"
F G "strspn" 9 271 "*int8(*int8 s1,*int8 s2)"
V L "sc1" 9 272 "*int8"
V L "sc2" 9 272 "*int8"
C L "strstr" 9 19 6 "FUNCTION"
V L "s1" 9 289 "*int8"
V L "s2" 9 289 "*int8"
F G "strstr" 9 290 "*int8(*int8 s1,*int8 s2)"
V L "s" 9 291 "*int8"
V L "t" 9 291 "*int8"
C L "strtok" 9 19 13 "FUNCTION"
V L "s1" 9 328 "*int8"
V L "s2" 9 328 "*int8"
F G "strtok" 9 329 "*int8(*int8 s1,*int8 s2)"
V L "beg" 9 330 "*int8"
V L "end" 9 330 "*int8"
V L "save" 9 331 "*int8"
V L "s" 9 377 "*int8"
F G "strlen" 9 378 "*int8(*int8 s)"
V L "sc" 9 379 "*int8"
C L "stricmp" 9 19 2 "FUNCTION"
V L "s1" 9 388 "*int8"
V L "s2" 9 388 "*int8"
F G "stricmp" 9 389 "sint8(*int8 s1,*int8 s2)"
C L "strlwr" 9 19 3 "FUNCTION"
V L "s" 9 402 "*int8"
F G "strlwr" 9 403 "*int8(*int8 s)"
V L "p" 9 404 "*int8"
F G "MAIN" 0 14 "void()"
V L "i" 0 15 "int8"
V L "j" 0 15 "int8"
V L "address" 0 15 "int8"
V L "value" 0 15 "int8"
V L "valor" 0 16 "int8"
V L "indicador" 0 16 "int8"
V L "q" 0 18 "int16"
V L "q1" 0 18 "int16"
V L "p" 0 19 "float"
V L "comando" 0 20 "int8"
V L "comBorrado" 0 20 "int8"
C L "MAIN" 0 36 1 "FUNCTION"
C L "MAIN" 0 36 1 "FUNCTION"
C L "MAIN" 0 36 1 "FUNCTION"
C L "MAIN" 0 36 1 "FUNCTION"
C L "MAIN" 0 36 8 "FUNCTION"
F B "reset_cpu" 0 0
F B "abs" 1 0
F B "sleep" 0 0
F B "delay_cycles" 1 0
F B "read_bank" 2 0
F B "write_bank" 3 0
F B "shift_left" 2 2
F B "shift_right" 2 2
F B "rotate_left" 2 0
F B "rotate_right" 2 0
F B "_mul" 2 0
F B "strcpy" 2 0
F B "memset" 3 0
F B "memcpy" 3 0
F B "isamoung" 2 0
F B "isamong" 2 0
F B "bit_set" 2 0
F B "bit_clear" 2 0
F B "bit_test" 2 0
F B "toupper" 1 0
F B "tolower" 1 0
F B "swap" 1 0
F B "printf" 1 255
F B "fprintf" 1 255
F B "sprintf" 1 255
F B "make8" 2 0
F B "make16" 2 0
F B "make32" 1 255
F B "label_address" 1 1
F B "goto_address" 1 0
F B "_va_arg" 1 0
F B "offsetofbit" 2 2
F B "enable_interrupts" 1 0
F B "disable_interrupts" 1 0
F B "interrupt_active" 1 0
F B "clear_interrupt" 1 0
F B "jump_to_isr" 1 0
F B "ext_int_edge" 1 2
F B "read_eeprom" 1 0
F B "write_eeprom" 2 0
F B "read_program_eeprom" 1 0
F B "write_program_eeprom" 2 0
F B "write_program_memory" 3 0
F B "read_program_memory" 3 0
F B "erase_program_eeprom" 1 0
F B "read_external_memory" 3 0
F B "write_external_memory" 3 0
F B "setup_external_memory" 1 0
F B "write_configuration_memory" 2 3
F B "read_configuration_memory" 2 3
F B "output_high" 1 0
F B "output_low" 1 0
F B "input" 1 0
F B "input_state" 1 0
F B "output_float" 1 0
F B "output_drive" 1 0
F B "output_bit" 1 1
F B "output_toggle" 1 0
F B "output_a" 1 0
F B "output_b" 1 0
F B "output_c" 1 0
F B "output_e" 1 0
F B "input_a" 0 0
F B "input_b" 0 0
F B "input_c" 0 0
F B "input_e" 0 0
F B "set_tris_a" 1 0
F B "set_tris_b" 1 0
F B "set_tris_c" 1 0
F B "set_tris_e" 1 0
F B "get_tris_a" 0 0
F B "get_tris_b" 0 0
F B "get_tris_c" 0 0
F B "get_tris_e" 0 0
F B "port_b_pullups" 1 0
F B "setup_counters" 2 0
F B "setup_wdt" 1 0
F B "restart_cause" 0 0
F B "restart_wdt" 0 0
F B "get_rtcc" 0 0
F B "set_rtcc" 1 0
F B "get_timer0" 0 0
F B "set_timer0" 1 0
F B "setup_comparator" 1 0
F B "setup_port_a" 1 0
F B "setup_adc_ports" 1 0
F B "setup_adc" 1 0
F B "set_adc_channel" 1 0
F B "read_adc" 0 1
F B "adc_done" 0 0
F B "setup_timer_0" 1 0
F B "setup_timer_1" 1 0
F B "get_timer1" 0 0
F B "set_timer1" 1 0
F B "setup_timer_2" 3 0
F B "get_timer2" 0 0
F B "set_timer2" 1 0
F B "setup_timer_3" 1 0
F B "set_timer3" 1 0
F B "get_timer3" 0 0
F B "setup_ccp1" 1 0
F B "set_pwm1_duty" 1 0
F B "setup_ccp2" 1 0
F B "set_pwm2_duty" 1 0
F B "setup_vref" 1 0
F B "setup_low_volt_detect" 1 0
F B "setup_oscillator" 1 2
F B "setup_spi" 1 0
F B "spi_read" 0 1
F B "spi_write" 1 0
F B "spi_data_is_in" 0 0
F B "setup_spi2" 1 0
F B "spi_read2" 0 1
F B "spi_write2" 1 0
F B "spi_data_is_in2" 0 0
F B "delay_ms" 1 0
F B "delay_us" 1 0
F B "putchar" 1 2
F B "puts" 1 2
F B "getch" 0 1
F B "gets" 1 3
F B "kbhit" 0 1
